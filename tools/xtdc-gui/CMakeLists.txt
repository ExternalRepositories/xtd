cmake_minimum_required(VERSION 3.3)

#Project
project(xtdc-gui)
set(SOURCES
  src/main_form.h
  src/main_form.cpp
  src/project_language.h
  src/project_platform.h
  src/project_sdk.h
  src/project_type.h
  src/project_type_item.h
  src/project_type_item_control.h
  src/project_type_item_control.cpp
  src/project_type_items_control.h
  src/xtd_example_item.h
)
set(PROPERTIES
  properties/settings.h
  properties/startup.cpp
)

if (MSVC)
  set(APPLICATION_ICON resources/xtdc-gui.ico)
  get_filename_component(ABSOLUTE_PATH_FILE_ICON "${APPLICATION_ICON}"  REALPATH BASE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
  string(REPLACE "/" "\\\\" ABSOLUTE_PATH_FILE_ICON ${ABSOLUTE_PATH_FILE_ICON})
  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/resources/xtdc-gui.rc
    "#pragma region xtd generated code\n"
    "// This code was generated by CMake script.\n"
    "//\n"
    "// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.\n"
    "\n"
    "#include <Windows.h>\n"
    "\n"
    "LANGUAGE LANG_NEUTRAL, SUBLANG_NEUTRAL\n"
    "#pragma code_page(65001)\n"
    "\n"
    "IDI_XTDC-GUI ICON DISCARDABLE \"${ABSOLUTE_PATH_FILE_ICON}\"\n\n"
    "VS_VERSION_INFO VERSIONINFO\n"
    " FILEVERSION 1,0,0,0\n"
    " PRODUCTVERSION 1,0,0,0\n"
    " FILEFLAGSMASK 0x0L\n"
    "#if !defined(NDEBUG)\n"
    " FILEFLAGS VS_FF_DEBUG\n"
    "#endif\n"
    " FILEOS VOS_NT\n"
    " FILETYPE VFT_APP\n"
    " FILESUBTYPE VFT2_UNKNOWN\n"
    "BEGIN\n"
    "  BLOCK \"StringFileInfo\"\n"
    "  BEGIN\n"
    "    BLOCK \"000004b0\"\n"
    "    BEGIN\n"
    "      VALUE \"CompanyName\", \"Gammasoft\"\n"
    "      VALUE \"FileDescription\", \"Open, run, create new xtd project or show any xtd example\"\n"
    "      VALUE \"FileVersion\", \"1,0,0,0\"\n"
    "      VALUE \"InternalName\", \"xtdc-gui\"\n"
    "      VALUE \"LegalCopyright\", \"Copyright Gammasoft\"\n"
    "      VALUE \"LegalTrademarks1\", \"\"\n"
    "      VALUE \"LegalTrademarks2\", \"\"\n"
    "      VALUE \"OriginalFilename\", \"xtdc-gui.exe\"\n"
    "      VALUE \"ProductName\", \"xtdc-gui\"\n"
    "      VALUE \"ProductVersion\", \"1,0,0\"\n"
    "    END\n"
    "  END\n"
    "  BLOCK \"VarFileInfo\"\n"
    "  BEGIN\n"
    "    VALUE \"Translation\", 0x0, 1200\n"
    "  END\n"
    "END\n"
    "#pragma endregion\n"
  )
  set(SOURCES "${SOURCES};${CMAKE_CURRENT_BINARY_DIR}/resources/xtdc-gui.rc")
elseif (APPLE)
  set(APPLICATION_ICON resources/xtdc-gui.icns)
  set_source_files_properties(${APPLICATION_ICON} PROPERTIES MACOSX_PACKAGE_LOCATION "Resources")
  set(MACOSX_BUNDLE_BUNDLE_NAME "xtdc-gui")
  set(MACOSX_BUNDLE_COPYRIGHT "Copyright Gammasoft")
  set(MACOSX_BUNDLE_GUI_IDENTIFIER "c187861f-9449-4fe6-b117-449531b67fd2")
  set(MACOSX_BUNDLE_ICON_FILE "xtdc-gui")
  set(MACOSX_BUNDLE_INFO_STRING "Open, run, create new xtd project or show any xtd example")
  set(MACOSX_BUNDLE_SHORT_VERSION_STRING "1.0.0")
elseif (UNIX)
  set(APPLICATION_ICON resources/xtdc-gui.png)
  configure_file(${APPLICATION_ICON} $ENV{HOME}/.local/share/icons/hicolor/512x512/apps/xtdc-gui.png COPYONLY)
  file(WRITE ${CMAKE_CURRENT_BINARY_DIR}/resources/xtdc-gui.desktop
    "[Desktop Entry]\n"
    "Type=Application\n"
    "Encoding=UTF-8\n"
    "Comment=Open, run, create new xtd project or show any xtd example\n"
    "Exec=$ENV{HOME}/local/bin/xtdc-gui\n"
    "Icon=xtdc-gui\n"
    "Name=xtdc-gui\n"
    "Terminal=false\n"
    "Version=1.0.0\n"
  )
  file(COPY ${CMAKE_CURRENT_BINARY_DIR}/resources/xtdc-gui.desktop DESTINATION "$ENV{HOME}/.local/share/applications" FILE_PERMISSIONS OWNER_EXECUTE OWNER_WRITE OWNER_READ)
  configure_file(${CMAKE_CURRENT_BINARY_DIR}/resources/xtdc-gui.desktop $ENV{HOME}/.local/share/applications/xtdc-gui.desktop COPYONLY)
endif ()

# Options)
source_group(src FILES ${SOURCES})
source_group(properties FILES ${PROPERTIES})

# Options
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
add_definitions(-D__XTD_FORMS_RESOURCES_PATH__="${CMAKE_INSTALL_PREFIX}")
if (WIN32)
  set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /ENTRY:mainCRTStartup")
endif ()

# Target
add_executable(${PROJECT_NAME} WIN32 MACOSX_BUNDLE ${SOURCES} ${PROPERTIES} ${APPLICATION_ICON})
target_link_libraries(${PROJECT_NAME} xtd.forms)
set_target_properties(${PROJECT_NAME} PROPERTIES FOLDER "xtd/tools")

install(TARGETS ${PROJECT_NAME} EXPORT ${EXPORT_PROJECT_NAME} DESTINATION bin)
